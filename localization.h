#ifndef LOCALIZATION_H
#define LOCALIZATION_H
#include <mpi.h>  

/**
* @brief Analyze dependencies of local matrix and establish communication plan with other processes.
*
* This function is the core of parallel setup. It examines the column indices of the local sparse matrix
* to determine which data ("ghost points") need to be obtained from which other processes during 
* matrix-vector multiplication. It prepares all necessary communication lists for subsequent 
* `synchronizeVector` function calls.
*/
int setupCommunication(int rank, int num_procs, int global_rows, int *col_indices, const int *row_ptr, int local_non_zeros, MPI_Comm *communicator, int **send_counts, int ***send_lists, int **recv_counts, int ***recv_lists);

/**
* @brief Synchronize vector data between processes according to the communication plan established by `setupCommunication`.
*
* This function is called before each sparse matrix-vector multiplication. It is responsible for sending 
* local vector data that other processes need as "ghost points", and receiving "ghost point" data 
* from other processes that this process needs.
*/
int synchronizeVector(int rank, int num_procs, double *vector_data, const int *send_counts, int **const send_lists, const int *recv_counts, int **const recv_lists, MPI_Comm *communicator);

/**
* @brief A debugging function to print the communication plan generated by `setupCommunication`.
*/
int printCommunicationPlan(int rank, int num_procs, const int *send_counts, int **const send_lists, const int *recv_counts, int **const recv_lists, MPI_Comm *communicator);

#endif // LOCALIZATION_H